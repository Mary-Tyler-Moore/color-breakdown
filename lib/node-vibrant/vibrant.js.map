{"version":3,"file":"vibrant.js","sources":["../src/colors.ts","../src/util.ts","../src/color.ts","../src/builder.ts","../src/quantizer/worker/pool.ts","../src/quantizer/worker.ts","../src/generator/default.ts","../src/filter/default.ts","../src/filter/index.ts","../src/vibrant.ts","../src/image/base.ts","../src/image/browser.ts","../src/browser.ts"],"sourcesContent":["import { Vec3 } from './color';\r\n\r\nexport function hexToRgb(hex: string): Vec3 {\r\n    let m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return m === null\r\n        ? null\r\n        : <Vec3>[m[1], m[2], m[3]].map(s => parseInt(s, 16));\r\n}\r\n\r\nexport function rgbToHsl(r: number, g: number, b: number): Vec3 {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h: number;\r\n    let s: number;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0;\r\n    } else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n\r\n        h /= 6;\r\n    }\r\n    return [h, s, l];\r\n}\r\n","import { Vec3 } from './color'\nimport { hexToRgb } from './colors'\n\nexport const DELTAE94_DIFF_STATUS = {\n    NA: 0,\n    PERFECT: 1,\n    CLOSE: 2,\n    GOOD: 10,\n    SIMILAR: 50\n}\n\nexport const SIGBITS = 5\nexport const RSHIFT = 8 - SIGBITS\n\nexport interface IndexedObject {\n    [key: string]: any\n}\n\nexport interface DeferredPromise<R> {\n    resolve: (thenableOrResult: R | PromiseLike<R>) => void\n    reject: (error: any) => void\n    promise: Promise<R>\n}\n\nexport function defer<R>(): DeferredPromise<R> {\n    let resolve: (thenableOrResult: R | PromiseLike<R>) => void\n    let reject: (error: any) => void\n    let promise = new Promise<R>((_resolve, _reject) => {\n        resolve = _resolve\n        reject = _reject\n    })\n    return { resolve, reject, promise }\n}\nexport function rgbToHex(r: number, g: number, b: number): string {\n    return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7)\n}\n\nexport function hslToRgb(h: number, s: number, l: number): Vec3 {\n    let r: number\n    let g: number\n    let b: number\n\n    function hue2rgb(p: number, q: number, t: number): number {\n        if (t < 0) t += 1\n        if (t > 1) t -= 1\n        if (t < 1 / 6) return p + (q - p) * 6 * t\n        if (t < 1 / 2) return q\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n        return p\n    }\n\n    if (s === 0) {\n        r = g = b = l\n    } else {\n        let q = l < 0.5 ? l * (1 + s) : l + s - (l * s)\n        let p = 2 * l - q\n        r = hue2rgb(p, q, h + 1 / 3)\n        g = hue2rgb(p, q, h)\n        b = hue2rgb(p, q, h - (1 / 3))\n    }\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ]\n}\n\nexport function rgbToXyz(r: number, g: number, b: number): Vec3 {\n    r /= 255\n    g /= 255\n    b /= 255\n    r = r > 0.04045 ? Math.pow((r + 0.005) / 1.055, 2.4) : r / 12.92\n    g = g > 0.04045 ? Math.pow((g + 0.005) / 1.055, 2.4) : g / 12.92\n    b = b > 0.04045 ? Math.pow((b + 0.005) / 1.055, 2.4) : b / 12.92\n\n    r *= 100\n    g *= 100\n    b *= 100\n\n    let x = r * 0.4124 + g * 0.3576 + b * 0.1805\n    let y = r * 0.2126 + g * 0.7152 + b * 0.0722\n    let z = r * 0.0193 + g * 0.1192 + b * 0.9505\n\n    return [x, y, z]\n}\n\nexport function xyzToCIELab(x: number, y: number, z: number): Vec3 {\n    let REF_X = 95.047\n    let REF_Y = 100\n    let REF_Z = 108.883\n\n    x /= REF_X\n    y /= REF_Y\n    z /= REF_Z\n\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116\n\n    let L = 116 * y - 16\n    let a = 500 * (x - y)\n    let b = 200 * (y - z)\n\n    return [L, a, b]\n}\n\nexport function rgbToCIELab(r: number, g: number, b: number): Vec3 {\n    let [x, y, z] = rgbToXyz(r, g, b)\n    return xyzToCIELab(x, y, z)\n}\n\nexport function deltaE94(lab1: Vec3, lab2: Vec3): number {\n    let WEIGHT_L = 1\n    let WEIGHT_C = 1\n    let WEIGHT_H = 1\n\n    let [L1, a1, b1] = lab1\n    let [L2, a2, b2] = lab2\n    let dL = L1 - L2\n    let da = a1 - a2\n    let db = b1 - b2\n\n    let xC1 = Math.sqrt(a1 * a1 + b1 * b1)\n    let xC2 = Math.sqrt(a2 * a2 + b2 * b2)\n\n    let xDL = L2 - L1\n    let xDC = xC2 - xC1\n    let xDE = Math.sqrt(dL * dL + da * da + db * db)\n\n    let xDH = (Math.sqrt(xDE) > Math.sqrt(Math.abs(xDL)) + Math.sqrt(Math.abs(xDC)))\n        ? Math.sqrt(xDE * xDE - xDL * xDL - xDC * xDC)\n        : 0\n\n    let xSC = 1 + 0.045 * xC1\n    let xSH = 1 + 0.015 * xC1\n\n    xDL /= WEIGHT_L\n    xDC /= WEIGHT_C * xSC\n    xDH /= WEIGHT_H * xSH\n\n    return Math.sqrt(xDL * xDL + xDC * xDC + xDH * xDH)\n}\n\nexport function rgbDiff(rgb1: Vec3, rgb2: Vec3): number {\n    let lab1 = rgbToCIELab.apply(undefined, rgb1)\n    let lab2 = rgbToCIELab.apply(undefined, rgb2)\n    return deltaE94(lab1, lab2)\n}\n\nexport function hexDiff(hex1: string, hex2: string): number {\n    let rgb1 = hexToRgb(hex1)\n    let rgb2 = hexToRgb(hex2)\n\n    return rgbDiff(rgb1, rgb2)\n}\n\nexport function getColorDiffStatus(d: number): string {\n    if (d < DELTAE94_DIFF_STATUS.NA)\n        return 'N/A'\n    // Not perceptible by human eyes\n    if (d <= DELTAE94_DIFF_STATUS.PERFECT)\n        return 'Perfect'\n    // Perceptible through close observation\n    if (d <= DELTAE94_DIFF_STATUS.CLOSE)\n        return 'Close'\n    // Perceptible at a glance\n    if (d <= DELTAE94_DIFF_STATUS.GOOD)\n        return 'Good'\n    // Colors are more similar than opposite\n    if (d < DELTAE94_DIFF_STATUS.SIMILAR)\n        return 'Similar'\n    return 'Wrong'\n\n}\n\nexport function getColorIndex(r: number, g: number, b: number): number {\n    return (r << (2 * SIGBITS)) + (g << SIGBITS) + b\n}\n\nexport { hexToRgb, rgbToHsl } from './colors';\n","import { Filter } from './typing'\nimport { rgbToHsl, rgbToHex } from './util'\n\nexport interface Vec3 extends Array<number> {\n    0: number,\n    1: number,\n    2: number\n}\n\nexport interface Palette {\n    Vibrant?: Swatch,\n    Muted?: Swatch,\n    DarkVibrant?: Swatch,\n    DarkMuted?: Swatch,\n    LightVibrant?: Swatch,\n    LightMuted?: Swatch\n    [name: string]: Swatch\n}\n\n\nexport class Swatch {\n    static applyFilter(colors: Swatch[], f: Filter): Swatch[] {\n        return typeof f === 'function'\n            ? colors.filter(({ r, g, b }) => f(r, g, b, 255))\n            : colors\n    }\n    private _hsl: Vec3\n    private _rgb: Vec3\n    private _yiq: number\n    private _population: number\n    private _hex: string\n    get r() { return this._rgb[0] }\n    get g() { return this._rgb[1] }\n    get b() { return this._rgb[2] }\n    getRgb(): Vec3 { return this._rgb }\n    getHsl(): Vec3 {\n        if (!this._hsl) {\n            let [r, g, b] = this._rgb\n            this._hsl = rgbToHsl(r, g, b)\n        }\n        return this._hsl\n    }\n    getPopulation(): number { return this._population }\n\n    getHex(): string {\n        if (!this._hex) {\n            let [r, g, b] = this._rgb\n            this._hex = rgbToHex(r, g, b)\n        }\n        return this._hex\n    }\n\n    private getYiq(): number {\n        if (!this._yiq) {\n            let rgb = this._rgb\n            this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000\n        }\n        return this._yiq\n    }\n\n    getTitleTextColor(): string {\n        return this.getYiq() < 200 ? '#fff' : '#000'\n    }\n\n    getBodyTextColor(): string {\n        return this.getYiq() < 150 ? '#fff' : '#000'\n    }\n\n    constructor(rgb: Vec3, population: number) {\n        this._rgb = rgb\n        this._population = population\n    }\n}\n","import {\n    Callback,\n    ImageClass,\n    ImageSource,\n    Options,\n    Filter,\n    Quantizer,\n    Generator\n} from './typing'\n\nimport { Palette } from './color'\nimport Vibrant from './vibrant'\n\nexport default class Builder {\n    private _src: ImageSource\n    private _opts: Partial<Options>\n    constructor(src: ImageSource, opts: Partial<Options> = {}) {\n        this._src = src\n        this._opts = opts\n        this._opts.filters = Vibrant.DefaultOpts.filters.slice(0);\n    }\n\n    maxColorCount(n: number): Builder {\n        this._opts.colorCount = n\n        return this\n    }\n\n    maxDimension(d: number): Builder {\n        this._opts.maxDimension = d\n        return this\n    }\n\n    addFilter(f: Filter): Builder {\n        this._opts.filters.push(f)\n        return this\n    }\n\n    removeFilter(f: Filter): Builder {\n        let i = this._opts.filters.indexOf(f)\n        if (i > 0) this._opts.filters.splice(i)\n        return this\n    }\n\n    clearFilters(): Builder {\n        this._opts.filters = []\n        return this\n    }\n\n    quality(q: number): Builder {\n        this._opts.quality = q\n        return this\n    }\n\n    useImageClass(imageClass: ImageClass): Builder {\n        this._opts.ImageClass = imageClass\n        return this\n    }\n\n    useGenerator(generator: Generator): Builder {\n        this._opts.generator = generator\n        return this\n    }\n\n    useQuantizer(quantizer: Quantizer): Builder {\n        this._opts.quantizer = quantizer\n        return this\n    }\n\n    build(): Vibrant {\n        return new Vibrant(this._src, this._opts)\n    }\n\n    getPalette(cb?: Callback<Palette>): Promise<Palette> {\n        return this.build().getPalette(cb)\n    }\n    getSwatches(cb?: Callback<Palette>): Promise<Palette> {\n        return this.build().getPalette(cb)\n    }\n}\n","import { Swatch } from '../../color'\nimport {\n    Pixels,\n    ComputedOptions\n} from '../../typing'\nimport {\n    DeferredPromise,\n    defer\n} from '../../util'\n\nimport {\n    WorkerRequest,\n    WorkerResponse,\n    WorkerErrorResponse\n} from './common'\n\ninterface Task extends WorkerRequest {\n    deferred: DeferredPromise<Swatch[]>\n}\n\ninterface TaskWorker extends Worker {\n    id: number\n    idle: boolean\n}\n\ninterface TaskWorkerClass {\n    new (): TaskWorker\n}\n\nconst MAX_WORKER_COUNT = 5\nexport default class WorkerPool {\n    private static _instance: WorkerPool\n    private static _task_id = 0\n    static get instance() {\n        if (!this._instance) this._instance = new WorkerPool()\n        return this._instance\n    }\n\n    private _workers: TaskWorker[] = []\n    private _queue: Task[] = []\n    private _executing: { [id: number]: Task } = {}\n\n    private _findIdleWorker(): TaskWorker {\n        let worker: TaskWorker\n        // if no idle worker && worker count < max count, make new one\n        if (this._workers.length === 0 || this._workers.length < MAX_WORKER_COUNT) {\n            worker = new Worker('./worker.js') as TaskWorker;\n            worker.id = this._workers.length\n            worker.idle = true\n            this._workers.push(worker)\n            worker.onmessage = this._onMessage.bind(this, worker.id)\n        } else {\n            worker = this._workers.find(worker => worker.idle)\n        }\n\n        return worker\n    }\n\n    private _enqueue(pixels: Pixels, opts: ComputedOptions): Promise<Swatch[]> {\n        let d = defer<Swatch[]>()\n\n        // make task item\n        let task: Task = {\n            id: WorkerPool._task_id++,\n            payload: {\n                pixels, opts\n            },\n            deferred: d\n        }\n        this._queue.push(task)\n\n        // Try dequeue\n        this._tryDequeue()\n\n        return d.promise\n    }\n\n    private _tryDequeue() {\n        // Called when a work has finished or from _enqueue\n\n        // No pending task\n        if (this._queue.length <= 0) return\n\n        // Find idle worker\n        let worker = this._findIdleWorker()\n        // No idle worker\n        if (!worker) return\n\n        // Dequeue task\n        let task = this._queue.shift()\n        this._executing[task.id] = task\n\n        // Send payload\n        let { deferred, ...request } = task;\n        const { ImageClass, combinedFilter, filters, generator, quantizer, ...payloadOpts } = request.payload.opts;\n        request.payload.opts = payloadOpts as ComputedOptions;\n        worker.postMessage(request)\n        worker.idle = false\n    }\n    private _onMessage(workerId: number, event: MessageEvent) {\n        let data: WorkerResponse | WorkerErrorResponse = event.data\n        if (!data) return\n        // Worker should send result along with payload id\n        let { id } = data\n        // Task is looked up by id\n        let task = this._executing[id]\n        this._executing[id] = undefined\n\n        // Resolve or reject deferred promise\n        switch (data.type) {\n            case 'return':\n                task.deferred.resolve(data.payload.map(({ _rgb, _population }) => new Swatch(_rgb, _population)))\n                break\n            case 'error':\n                task.deferred.reject(new Error(data.payload))\n                break\n        }\n        // Update worker status\n        this._workers[workerId].idle = true\n        // Try dequeue next task\n        this._tryDequeue()\n    }\n    quantize(pixels: Pixels, opts: ComputedOptions): Promise<Swatch[]> {\n        return this._enqueue(pixels, opts)\n    }\n}\n","import WorkerPool from './worker/pool'\n\nimport {\n    Quantizer,\n    Pixels,\n    ComputedOptions\n} from '../typing'\nimport { Swatch } from '../color'\n\nconst quantizeInWorker: Quantizer = (pixels: Pixels, opts: ComputedOptions): Promise<Swatch[]> =>\n    WorkerPool.instance.quantize(pixels, opts)\n\nexport default quantizeInWorker\n","import { Swatch, Palette } from '../color'\nimport { Generator } from '../typing'\nimport { hslToRgb } from '../util'\n\ninterface DefaultGeneratorOptions {\n    targetDarkLuma: number,\n    maxDarkLuma: number,\n    minLightLuma: number,\n    targetLightLuma: number,\n    minNormalLuma: number,\n    targetNormalLuma: number,\n    maxNormalLuma: number,\n    targetMutesSaturation: number,\n    maxMutesSaturation: number,\n    targetVibrantSaturation: number,\n    minVibrantSaturation: number,\n    weightSaturation: number,\n    weightLuma: number,\n    weightPopulation: number\n}\n\nconst DefaultOpts: DefaultGeneratorOptions = {\n    targetDarkLuma: 0.26,\n    maxDarkLuma: 0.45,\n    minLightLuma: 0.55,\n    targetLightLuma: 0.74,\n    minNormalLuma: 0.3,\n    targetNormalLuma: 0.5,\n    maxNormalLuma: 0.7,\n    targetMutesSaturation: 0.3,\n    maxMutesSaturation: 0.4,\n    targetVibrantSaturation: 1.0,\n    minVibrantSaturation: 0.35,\n    weightSaturation: 3,\n    weightLuma: 6.5,\n    weightPopulation: 0.5,\n}\n\nfunction _findMaxPopulation(swatches: Array<Swatch>): number {\n    let p = 0\n\n    swatches.forEach((s) => {\n        p = Math.max(p, s.getPopulation())\n    })\n\n    return p\n}\n\nfunction _isAlreadySelected(palette: Palette, s: Swatch): boolean {\n    return palette.Vibrant === s\n        || palette.DarkVibrant === s\n        || palette.LightVibrant === s\n        || palette.Muted === s\n        || palette.DarkMuted === s\n        || palette.LightMuted === s\n}\n\nfunction _createComparisonValue(\n    saturation: number, targetSaturation: number,\n    luma: number, targetLuma: number,\n    population: number, maxPopulation: number, opts: DefaultGeneratorOptions): number {\n\n    function weightedMean(...values: number[]) {\n        let sum = 0\n        let weightSum = 0\n        for (let i = 0; i < values.length; i += 2) {\n            let value = values[i]\n            let weight = values[i + 1]\n            sum += value * weight\n            weightSum += weight\n        }\n\n        return sum / weightSum\n    }\n\n    function invertDiff(value: number, targetValue: number): number {\n        return 1 - Math.abs(value - targetValue)\n    }\n\n    return weightedMean(\n        invertDiff(saturation, targetSaturation), opts.weightSaturation,\n        invertDiff(luma, targetLuma), opts.weightLuma,\n        population / maxPopulation, opts.weightPopulation\n    )\n\n}\n\nfunction _findColorVariation(palette: Palette, swatches: Array<Swatch>, maxPopulation: number,\n    targetLuma: number,\n    minLuma: number,\n    maxLuma: number,\n    targetSaturation: number,\n    minSaturation: number,\n    maxSaturation: number,\n    opts: DefaultGeneratorOptions): Swatch {\n\n    let max: Swatch = null\n    let maxValue = 0\n\n    swatches.forEach((swatch) => {\n        let [, s, l] = swatch.getHsl()\n\n        if (s >= minSaturation && s <= maxSaturation\n            && l >= minLuma && l <= maxLuma\n            && !_isAlreadySelected(palette, swatch)\n        ) {\n            let value = _createComparisonValue(s, targetSaturation, l, targetLuma, swatch.getPopulation(), maxPopulation, opts)\n\n            if (max === null || value > maxValue) {\n                max = swatch\n                maxValue = value\n            }\n\n        }\n    })\n\n    return max\n}\n\nfunction _generateVariationColors(swatches: Array<Swatch>, maxPopulation: number, opts: DefaultGeneratorOptions): Palette {\n    let palette: Palette = {}\n    // mVibrantSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n    //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n    palette.Vibrant = _findColorVariation(palette, swatches, maxPopulation,\n        opts.targetNormalLuma,\n        opts.minNormalLuma,\n        opts.maxNormalLuma,\n        opts.targetVibrantSaturation,\n        opts.minVibrantSaturation,\n        1,\n        opts\n    )\n    // mLightVibrantSwatch = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n    //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n    palette.LightVibrant = _findColorVariation(palette, swatches, maxPopulation,\n        opts.targetLightLuma,\n        opts.minLightLuma,\n        1,\n        opts.targetVibrantSaturation,\n        opts.minVibrantSaturation,\n        1,\n        opts\n    )\n    // mDarkVibrantSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n    //     TARGET_VIBRANT_SATURATION, MIN_VIBRANT_SATURATION, 1f);\n    palette.DarkVibrant = _findColorVariation(palette, swatches, maxPopulation,\n        opts.targetDarkLuma,\n        0,\n        opts.maxDarkLuma,\n        opts.targetVibrantSaturation,\n        opts.minVibrantSaturation,\n        1,\n        opts\n    )\n    // mMutedSwatch = findColor(TARGET_NORMAL_LUMA, MIN_NORMAL_LUMA, MAX_NORMAL_LUMA,\n    //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n    palette.Muted = _findColorVariation(palette, swatches, maxPopulation,\n        opts.targetNormalLuma,\n        opts.minNormalLuma,\n        opts.maxNormalLuma,\n        opts.targetMutesSaturation,\n        0,\n        opts.maxMutesSaturation,\n        opts\n    )\n    // mLightMutedColor = findColor(TARGET_LIGHT_LUMA, MIN_LIGHT_LUMA, 1f,\n    //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n    palette.LightMuted = _findColorVariation(palette, swatches, maxPopulation,\n        opts.targetLightLuma,\n        opts.minLightLuma,\n        1,\n        opts.targetMutesSaturation,\n        0,\n        opts.maxMutesSaturation,\n        opts\n    )\n    // mDarkMutedSwatch = findColor(TARGET_DARK_LUMA, 0f, MAX_DARK_LUMA,\n    //     TARGET_MUTED_SATURATION, 0f, MAX_MUTED_SATURATION);\n    palette.DarkMuted = _findColorVariation(palette, swatches, maxPopulation,\n        opts.targetDarkLuma,\n        0,\n        opts.maxDarkLuma,\n        opts.targetMutesSaturation,\n        0,\n        opts.maxMutesSaturation,\n        opts\n    )\n    return palette\n}\n\nfunction _generateEmptySwatches(palette: Palette, maxPopulation: number, opts: DefaultGeneratorOptions): void {\n    if (palette.Vibrant === null && palette.DarkVibrant === null && palette.LightVibrant === null) {\n        if (palette.DarkVibrant === null && palette.DarkMuted !== null) {\n            let [h, s, l] = palette.DarkMuted.getHsl()\n            l = opts.targetDarkLuma\n            palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n        }\n        if (palette.LightVibrant === null && palette.LightMuted !== null) {\n            let [h, s, l] = palette.LightMuted.getHsl()\n            l = opts.targetDarkLuma\n            palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n        }\n    }\n    if (palette.Vibrant === null && palette.DarkVibrant !== null) {\n        let [h, s, l] = palette.DarkVibrant.getHsl()\n        l = opts.targetNormalLuma\n        palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0)\n    } else if (palette.Vibrant === null && palette.LightVibrant !== null) {\n        let [h, s, l] = palette.LightVibrant.getHsl()\n        l = opts.targetNormalLuma\n        palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n    if (palette.DarkVibrant === null && palette.Vibrant !== null) {\n        let [h, s, l] = palette.Vibrant.getHsl()\n        l = opts.targetDarkLuma\n        palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n    if (palette.LightVibrant === null && palette.Vibrant !== null) {\n      let [h, s, l] = palette.Vibrant.getHsl()\n      l = opts.targetLightLuma\n      palette.LightVibrant = new Swatch(hslToRgb(h, s, l), 0)\n    }\n    if (palette.Muted === null && palette.Vibrant !== null) {\n      let [h, s, l] = palette.Vibrant.getHsl()\n      l = opts.targetMutesSaturation\n      palette.Muted = new Swatch(hslToRgb(h, s, l), 0)\n    }\n    if (palette.DarkMuted === null && palette.DarkVibrant !== null) {\n      let [h, s, l] = palette.DarkVibrant.getHsl()\n      l = opts.targetMutesSaturation\n      palette.DarkMuted = new Swatch(hslToRgb(h, s, l), 0)\n    }\n    if (palette.LightMuted === null && palette.LightVibrant !== null) {\n      let [h, s, l] = palette.LightVibrant.getHsl()\n      l = opts.targetMutesSaturation\n      palette.LightMuted = new Swatch(hslToRgb(h, s, l), 0)\n    }\n}\n\nconst DefaultGenerator: Generator = (swatches: Array<Swatch>, opts?: DefaultGeneratorOptions): Palette => {\n    opts = Object.assign({}, DefaultOpts, opts);\n    let maxPopulation = _findMaxPopulation(swatches)\n\n    let palette = _generateVariationColors(swatches, maxPopulation, opts)\n    _generateEmptySwatches(palette, maxPopulation, opts)\n\n    return palette\n}\n\nexport default DefaultGenerator\n","import { Filter } from '../typing'\nexport default function defaultFilter(r: number, g: number, b: number, a: number): boolean {\n    return a >= 125\n        && !(r > 250 && g > 250 && b > 250)\n}","export { default as Default } from './default'\nimport { Filter } from '../typing'\n\nexport function combineFilters(filters: Filter[]): Filter {\n    // TODO: caching\n    if (!Array.isArray(filters) || filters.length === 0) return null\n    return (r: number, g: number, b: number, a: number) => {\n        if (a === 0) return false\n        for (let i = 0; i < filters.length; i++) {\n            if (!filters[i](r, g, b, a)) return false\n        }\n        return true\n    }\n}\n","import {\n    Image,\n    ImageSource,\n    Options,\n    ComputedOptions,\n    Callback\n} from './typing'\n\nimport { Palette, Swatch } from './color'\n\nimport Builder from './builder'\n\nimport * as Util from './util'\n\nimport * as Quantizer from './quantizer'\nimport * as Generator from './generator'\nimport * as Filter from './filter'\n\nexport { Builder, Quantizer, Generator, Filter, Util };\n\n\nclass Vibrant {\n    static DefaultOpts: Partial<Options> = {\n        colorCount: 64,\n        quality: 5,\n        generator: Generator.Default,\n        ImageClass: null,\n        quantizer: Quantizer.WebWorker,\n        filters: [Filter.Default]\n    };\n\n    static from(src: ImageSource): Builder {\n        return new Builder(src);\n    }\n\n    opts: ComputedOptions;\n    private _palette: Palette;\n    constructor(private _src: ImageSource, opts?: Partial<Options>) {\n        this.opts = Object.assign(\n            {},\n            Vibrant.DefaultOpts,\n            opts\n        ) as ComputedOptions;\n        this.opts.combinedFilter = Filter.combineFilters(this.opts.filters);\n    }\n    private _process(image: Image, opts: ComputedOptions): Promise<Palette> {\n        let { quantizer, generator } = opts;\n\n        image.scaleDown(opts);\n\n        return image\n            .applyFilter(opts.combinedFilter)\n            .then(imageData => quantizer(imageData.data, opts))\n            .then(colors => Swatch.applyFilter(colors, opts.combinedFilter))\n            .then(colors => Promise.resolve(generator(colors)));\n    }\n\n    palette(): Palette {\n        return this.swatches();\n    }\n    swatches(): Palette {\n        return this._palette;\n    }\n\n    getPalette(cb?: Callback<Palette>): Promise<Palette> {\n        let image = new this.opts.ImageClass();\n        const result = image\n            .load(this._src)\n            .then(image => this._process(image, this.opts))\n            .then(\n                palette => {\n                    this._palette = palette;\n                    image.remove();\n                    return palette;\n                },\n                err => {\n                    image.remove();\n                    throw err;\n                }\n            );\n        if (cb) result.then(palette => cb(null, palette), err => cb(err));\n        return result;\n    }\n}\n\nexport default Vibrant\n","import { Filter, Image, Options, ImageData, ImageSource } from '../typing'\n\nexport abstract class ImageBase implements Image {\n    abstract load(image: ImageSource): Promise<ImageBase>\n    abstract clear(): void\n    abstract update(imageData: ImageData): void\n    abstract getWidth(): number\n    abstract getHeight(): number\n    abstract resize(targetWidth: number, targetHeight: number, ratio: number): void\n    abstract getPixelCount(): number\n    abstract getImageData(): ImageData\n    abstract remove(): void\n\n    scaleDown(opts: Options): void {\n        let width: number = this.getWidth()\n        let height: number = this.getHeight()\n\n        let ratio: number = 1\n\n        if (opts.maxDimension > 0) {\n            let maxSide: number = Math.max(width, height)\n            if (maxSide > opts.maxDimension) ratio = opts.maxDimension / maxSide\n        } else {\n            ratio = 1 / opts.quality\n        }\n\n        if (ratio < 1) this.resize(width * ratio, height * ratio, ratio)\n    }\n\n    applyFilter(filter: Filter): Promise<ImageData> {\n        let imageData = this.getImageData()\n\n        if (typeof filter === 'function') {\n            let pixels = imageData.data\n            let n = pixels.length / 4\n            let offset, r, g, b, a\n            for (let i = 0; i < n; i++) {\n                offset = i * 4\n                r = pixels[offset + 0]\n                g = pixels[offset + 1]\n                b = pixels[offset + 2]\n                a = pixels[offset + 3]\n                // Mark ignored color\n                if (!filter(r, g, b, a)) pixels[offset + 3] = 0\n            }\n        }\n\n        return Promise.resolve(imageData)\n    }\n}\n","import { ImageData, ImageSource } from '../typing'\nimport { ImageBase } from './base'\n\nfunction isRelativeUrl(url: string): boolean {\n    let u = new URL(url, location.href);\n    return u.protocol === location.protocol\n        && u.host === location.host\n        && u.port === location.port;\n}\n\nfunction isSameOrigin(a: string, b: string): boolean {\n    let ua = new URL(a)\n    let ub = new URL(b);\n\n    // https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\n    return ua.protocol === ub.protocol\n        && ua.hostname === ub.hostname\n        && ua.port === ub.port\n}\n\nexport default class BrowserImage extends ImageBase {\n    image: HTMLImageElement\n    private _canvas: HTMLCanvasElement\n    private _context: CanvasRenderingContext2D\n    private _width: number\n    private _height: number\n    private _initCanvas(): void {\n        let img = this.image\n        let canvas = this._canvas = document.createElement('canvas')\n        let context = this._context = canvas.getContext('2d')\n\n        canvas.className = 'vibrant-canvas'\n        canvas.style.display = 'none'\n\n        this._width = canvas.width = img.width\n        this._height = canvas.height = img.height\n\n        context.drawImage(img, 0, 0)\n\n        document.body.appendChild(canvas)\n    }\n    load(image: ImageSource): Promise<ImageBase> {\n        let img: HTMLImageElement = null\n        let src: string = null\n        if (typeof image === 'string') {\n            img = document.createElement('img')\n            src = image\n        } else if (image instanceof HTMLImageElement) {\n            img = image\n            src = image.src\n        } else {\n            return Promise.reject(new Error(`Cannot load buffer as an image in browser`))\n        }\n        this.image = img\n\n        if (!isRelativeUrl(src) && !isSameOrigin(window.location.href, src)) {\n            img.crossOrigin = 'anonymous'\n        }\n\n        if (typeof image === 'string') {\n            img.src = src\n        }\n\n        return new Promise<ImageBase>((resolve, reject) => {\n            let onImageLoad = () => {\n                this._initCanvas()\n                resolve(this)\n            }\n\n            if (img.complete) {\n                // Already loaded\n                onImageLoad()\n            } else {\n                img.onload = onImageLoad\n                img.onerror = (e) => reject(new Error(`Fail to load image: ${src}`))\n            }\n        })\n    }\n    clear(): void {\n        this._context.clearRect(0, 0, this._width, this._height)\n    }\n    update(imageData: ImageData): void {\n        this._context.putImageData(<ImageData>imageData, 0, 0)\n    }\n    getWidth(): number {\n        return this._width\n    }\n    getHeight(): number {\n        return this._height\n    }\n    resize(targetWidth: number, targetHeight: number, ratio: number): void {\n        let { _canvas: canvas, _context: context, image: img } = this\n\n        this._width = canvas.width = targetWidth\n        this._height = canvas.height = targetHeight\n\n        context.scale(ratio, ratio)\n        context.drawImage(img, 0, 0)\n    }\n    getPixelCount(): number {\n        return this._width * this._height\n    }\n    getImageData(): ImageData {\n        return this._context.getImageData(0, 0, this._width, this._height)\n    }\n    remove(): void {\n        this._canvas.parentNode.removeChild(this._canvas)\n    }\n}\n","import Vibrant from './vibrant'\nimport BrowserImage from './image/browser'\n\nVibrant.DefaultOpts.ImageClass = BrowserImage;\n\nexport * from './vibrant';\nexport default Vibrant\n"],"names":["rgbToHsl","r","g","b","h","s","max","Math","min","l","d","defer","resolve","reject","promise","Promise","_resolve","_reject","rgbToHex","toString","slice","hslToRgb","hue2rgb","p","q","t","Swatch","[object Object]","colors","f","filter","this","_rgb","_hsl","_population","_hex","_yiq","rgb","getYiq","population","Builder","src","opts","_src","_opts","filters","Vibrant","DefaultOpts","n","colorCount","maxDimension","push","i","indexOf","splice","quality","imageClass","ImageClass","generator","quantizer","cb","build","getPalette","MAX_WORKER_COUNT","WorkerPool","instance","_instance","worker","_workers","length","Worker","id","idle","onmessage","_onMessage","bind","find","pixels","task","_task_id","payload","deferred","_queue","_tryDequeue","_findIdleWorker","shift","_executing","request","payloadOpts","postMessage","workerId","event","data","undefined","type","map","Error","_enqueue","quantizeInWorker","quantize","targetDarkLuma","maxDarkLuma","minLightLuma","targetLightLuma","minNormalLuma","targetNormalLuma","maxNormalLuma","targetMutesSaturation","maxMutesSaturation","targetVibrantSaturation","minVibrantSaturation","weightSaturation","weightLuma","weightPopulation","_findMaxPopulation","swatches","forEach","getPopulation","_isAlreadySelected","palette","DarkVibrant","LightVibrant","Muted","DarkMuted","LightMuted","_createComparisonValue","saturation","targetSaturation","luma","targetLuma","maxPopulation","invertDiff","value","targetValue","abs","values","sum","weightSum","weight","weightedMean","_findColorVariation","minLuma","maxLuma","minSaturation","maxSaturation","maxValue","swatch","getHsl","_generateVariationColors","_generateEmptySwatches","DefaultGenerator","Object","assign","defaultFilter","a","combineFilters","Array","isArray","combinedFilter","Filter.combineFilters","image","scaleDown","applyFilter","then","imageData","_palette","result","load","_process","remove","err","Generator.Default","Quantizer.WebWorker","Filter.Default","ImageBase","width","getWidth","height","getHeight","ratio","maxSide","resize","getImageData","offset","isRelativeUrl","url","u","URL","location","href","protocol","host","port","isSameOrigin","ua","ub","hostname","BrowserImage","img","canvas","_canvas","document","createElement","context","_context","getContext","className","style","display","_width","_height","drawImage","body","appendChild","HTMLImageElement","window","crossOrigin","onImageLoad","_initCanvas","complete","onload","onerror","e","clearRect","putImageData","targetWidth","targetHeight","scale","parentNode","removeChild"],"mappings":"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"}